'use strict';

var hackerschool = require('./index'),
    util = require('util');

var client = hackerschool.client();

var auth = hackerschool.auth({
    client_id: '54cd59f07348781003e17b9d87780660449fb3fccfc3c82227f15f9c51061691',
    client_secret: 'a04667fb2a6dcb02da168e88f37a6836fa7fe435c43e97af1d8889fac69a9365',
    redirect_uri: 'urn:ietf:wg:oauth:2.0:oob'
});

console.log(auth.createAuthUrl());

if (process.env.code) {
  auth.getToken(process.env.code)
  .then(function(token) {
    client.setToken(token);

    client.people.me()
    .then(function(me) {
      console.log(util.inspect(me));
      console.log('people.me passes');
    }, function(err) {
      console.log('people.me FAILED: \n');
      console.log(util.inspect(err));
    });

    client.people.person(901)
    .then(function(person) {
      console.log('people.person passes');
    }, function(err) {
      console.log('people.person FAILED:\n');
      console.log(util.inspect(err));
    });

    client.batches.list()
    .then(function(batches) {

      console.log('batches.list passes');
    }, function(err) {
      console.log('batches.list FAILED:\n');
      console.log(util.inspect(err));
    });

    client.batches.batch(12)
    .then(function(batch) {
      console.log(batch);
      console.log('batches.batch passes');
    }, function(err) {
      console.log('batches.batch FAILED:\n');
      console.log(util.inspect(err));
    });

    client.batches.people(12)
    .then(function(people) {
      console.log('batches.people passes');
    }, function(err) {
      console.log('batches.people FAILED:\n');
      console.log(util.inspect(err));
    });
  }, function(err) {
    console.log('Error getting token: ' + err);
  }, function(err) {
    console.log(util.inspect(err));
  });
}
